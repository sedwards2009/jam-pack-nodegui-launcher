name: test

on: [push]

jobs:
  build:
    if: ${{!startsWith(github.ref, 'refs/tags/')}}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-18.04
            platform: linux
            arch: x64
          - os: windows-latest
            platform: win32
            arch: x64
          - os: macos-latest
            platform: darwin
            arch: x64
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - if: ${{ matrix.platform != 'win32' }}
        run: |
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release ..
          make
          mv jam-pack-nodegui-launcher jam-pack-nodegui-launcher-${{ matrix.platform }}
      - if: ${{ matrix.platform == 'win32' }}
        run: |
          mkdir build
          cd build
          cmake -G "NMake Makefiles" ..
          nmake
          rename jam-pack-nodegui-launcher.exe jam-pack-nodegui-launcher-${{ matrix.platform }}.exe

  create-release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-18.04
    steps:
      - name: Create GH release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: false
          tag_name: ${{github.ref_name}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  precompile:
    if: startsWith(github.ref, 'refs/tags/')
    needs: create-release
    strategy:
      matrix:
        include:
          - os: ubuntu-18.04
            platform: linux
            arch: x64
          - os: windows-latest
            platform: win32
            arch: x64
          - os: macos-latest
            platform: darwin
            arch: x64
    runs-on: ${{ matrix.os }}
    env:
      EXE_FILENAME: jam-pack-nodegui-launcher-${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2
      - run: |
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release ..
          make
          mv jam-pack-nodegui-launcher jam-pack-nodegui-launcher-${{ matrix.platform }}
      - uses: actions/upload-artifact@v1
        with:
          name: ${{ env.EXE_FILENAME }}
          path: ${{ env.EXE_FILENAME }}

      - name: Upload release binaries
        uses: alexellis/upload-assets@0.2.2
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          asset_paths: '["${{ env.EXE_FILENAME }}"]'
